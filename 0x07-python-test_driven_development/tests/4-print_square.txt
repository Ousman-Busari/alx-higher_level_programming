Test cases for the ''print_square'' function in ''4-print_square'' module
=========================================

importing the fucntion from the module:
	>>> print_square = __import__('4-print_square').print_square

zero, negative, single and double digit integer
================================
checking size of one digit:
	>>> print_square(4)
	####
	####
	####
	####

checking size of two digits:
	>>> print_square(10)
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########

checking size of two digits:
	>>> print_square(0)


checking size of two digits:
	>>> print_square(-1)
	Traceback (most recent call last):
	 	   ...
	ValueError: size must be >= 0

Testing for different types of size
=====================================
checking size of type float:
	>>> print_square(1.0)
	Traceback (most recent call last):
	 	   ...
	TypeError: size must be an integer

checking size of type float:
	>>> print_square(-2.1)
	Traceback (most recent call last):
	 	   ...
	TypeError: size must be an integer

Testig for Number of Arguments
================================
Checking no arguments:
	>>> print_square()
	Traceback (most recent call last):
		  ...
	TypeError: print_square() missing 1 required positional argument: 'size'

Checking more than one arguments:
	>>> print_square(5, (7, 8)) #doctest: +ELLIPSIS
	Traceback (most recent call last):
		  ...
	TypeError: print_square() takes 1 positional argument but ...
